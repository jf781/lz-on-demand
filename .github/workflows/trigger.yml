name: 'Trigger Workflow'
on:
  workflow_dispatch:
    inputs:
      TEMPLATE_REPO_URL: 
        description: 'URL of template repo'
        required: true
        type: string
      WORKSPACE_NAME:
        description: 'Defines the name of the GitHub repo and TFC workspace'
        required: true
        type: string
      GCP_PROJECT_ID:
        description: 'Target GCP Project ID'
        required: true
        type: string
      GCP_REGION:
        description: 'Target GCP Region'
        required: true
        type: string
      GKE_CLUSTER_NAME:
        description: 'Target GKE Cluster Name'
        required: false
        type: string
      VPC_NAME:
        description: 'Target VPC Name'
        required: false
        type: string
      SUBNET_NAME:
        description: 'Target Subnet Name'
        required: false
        type: string
      TFC_CONFIG_FILE:
        description: 'Defines the file that contains the TFC configuration'
        required: true
        type: string



jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    outputs:
      TEMPLATE_REPO: ${{ env.TEMPLATE_REPO }}
    steps:
    - name: 'define-runtime-variables'
      run: |
        # Confirm the Template Repo URL is the GitHub API URL
        if [[ ${{ inputs.TEMPLATE_REPO_URL }} == *"api.github.com"* ]]; then
          echo "TEMPLATE_REPO is a GitHub API URL: ${{ inputs.TEMPLATE_REPO_URL }}"
          echo "TEMPLATE_REPO=${{ inputs.TEMPLATE_REPO_URL }}" >> $GITHUB_ENV
        else
          apiGitHubUrl=$(echo ${{ inputs.TEMPLATE_REPO_URL }} | sed  's/github.com/api.github.com/g')
          echo "Updated TEMPLATE_REPO to be a GitHub API URL: $apiGitHubUrl"
          echo "TEMPLATE_REPO=$apiGitHubUrl" >> $GITHUB_ENV
        fi
    - name: 'test-if-${{ env.TEMPLATE_REPO }}-exists'
      run: |
        repoTestOutput=$(curl ${{ env.TEMPLATE_REPO }} \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28")
        repoExists=$( echo $repoTestOutput | jq '.id' -r )
        if [ "$repoExists" != 'null' ]; then 
          repo_exists="true"
        else
          repo_exists="false"
        fi 
        echo $repo_exists
  call-workflow-create-gh-repo:
    name: 'Create new GitHub Repo based on Templare URL'
    uses: ./.github/workflows/create-gh-repo.yml
    needs: validate-inputs
    with:
      REPO_NAME: ${{ inputs.WORKSPACE_NAME}}
      TEMPLATE_REPO_URL:  ${{ needs.validate-inputs.outputs.TEMPLATE_REPO }}
    secrets: inherit
  call-workflow-update-tfc-config-file:
    name: 'Updates the provider.tf file with the details of the TFC Workspace'
    uses: ./.github/workflows/update-tfc-config-file.yml
    needs: [validate-inputs, call-workflow-create-gh-repo]
    with:
      WORKSPACE_NAME: ${{ inputs.WORKSPACE_NAME }}
      TFC_ORG_NAME:  ${{ vars.TFC_ORG_NAME }}
      TFC_REPO: ${{ needs.call-workflow-create-gh-repo.outputs.NEW_REPO_FULL_NAME }}
      TFC_REPO_BRANCH: ${{ needs.call-workflow-create-gh-repo.outputs.NEW_REPO_DEFAULT_BRANCH }}
      TFC_CONFIG_FILE: ${{ inputs.TFC_CONFIG_FILE }}
    secrets: inherit
  call-workflow-update-tfvars-file:
    name: 'Updates TFVars with the Landing Zone details'
    uses: ./.github/workflows/update-tfvars-file.yml
    needs: [call-workflow-create-gh-repo, call-workflow-update-tfc-provider-file]
    with:
      TFC_REPO: ${{ needs.call-workflow-create-gh-repo.outputs.NEW_REPO_FULL_NAME }}
      TFC_REPO_BRANCH: "${{ needs.call-workflow-create-gh-repo.outputs.NEW_REPO_DEFAULT_BRANCH }}"
      GCP_PROJECT_ID: ${{ inputs.GCP_PROJECT_ID }}
      GCP_REGION: ${{ inputs.GCP_REGION }}
      GKE_CLUSTER_NAME: ${{ inputs.GKE_CLUSTER_NAME}}
      VPC_NAME: ${{ inputs.VPC_NAME }}
      SUBNET_NAME: ${{ inputs.SUBNET_NAME }}
    secrets: inherit
  call-workflow-initialize-tfc-workspace:
    name: 'Initialize TFC Workspace and define variables'
    uses: ./.github/workflows/initialize-tfc-workspace.yml
    needs: [validate-inputs,call-workflow-create-gh-repo, call-workflow-update-tfc-provider-file, call-workflow-update-tfvars-file]
    with:
      WORKSPACE_NAME: ${{ inputs.WORKSPACE_NAME }}
      TFC_ORG_NAME:  ${{ vars.TFC_ORG_NAME }}
      TFC_REPO: ${{ needs.call-workflow-create-gh-repo.outputs.NEW_REPO_FULL_NAME }}
      TFC_REPO_BRANCH: ${{ needs.call-workflow-create-gh-repo.outputs.NEW_REPO_DEFAULT_BRANCH }}
      GCP_REGION: ${{ inputs.GCP_REGION }}
    secrets: inherit
  call-workflow-apply-tfc-workspace:
    name: 'Apply TFC Workspace'
    uses: ./.github/workflows/apply-tfc-workspace.yml
    needs: [validate-inputs, call-workflow-create-gh-repo, call-workflow-update-tfc-provider-file, call-workflow-initialize-tfc-workspace, call-workflow-update-tfvars-file]
    with:
      WORKSPACE_NAME: ${{ inputs.WORKSPACE_NAME }}
      TFC_REPO: ${{ needs.call-workflow-create-gh-repo.outputs.NEW_REPO_FULL_NAME }}
      TFC_REPO_BRANCH: ${{ needs.call-workflow-create-gh-repo.outputs.NEW_REPO_DEFAULT_BRANCH }}
      TFC_WORKSPACE_ID: ${{ needs.call-workflow-initialize-tfc-workspace.outputs.TFC_WORKSPACE_ID }}
    secrets: inherit

